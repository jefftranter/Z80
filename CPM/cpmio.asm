; CP/M assembly language i/o program. Provides more convenient
; routines for console input/output. Intended to be assembled using
; the CP/M asm 8080 assembler. Taken from the book "CP/M Assembly
; Language Programming" by Ken Barbier.

; CP/M I/O SUBROUTINES  16 AUGUST 82

; ASCII CHARACTERS
CR	EQU	0DH		; CARRIAGE RETURN
LF	EQU	0AH		; LINE FEED
CTRLZ	EQU	1AH		; OPERATOR INTERRUPT

; CP/M BDOS FUNCTIONS
RCONF	EQU	1		; READ CON: INTO (A)
WCONF	EQU	2		; WRITE (A) TO CON:
RBUFF	EQU	10		; READ A CONSOLE LINE

; CP/M ADDRESSES
RBOOT	EQU	0		; RE-BOOT CP/M SYSTEM
BDOS	EQU	5		; SYSTEM CALL ENTRY
TPA	EQU	100H		; TRANSIENT PROGRAM AREA

	ORG	TPA		; ASSEMBLE PROGRAM FOR TPA

;START:	LXI	SP,STAK		; SET UP USER'S STACK
;START1:	CALL	CI	; INPUT A CONSOLE CHARACTER
;	CPI	CTRLZ		; OPERATOR INTERRUPT?
;	JZ	RBOOT		; YES, RETURN TO CP/M
;	CALL	CO		; NO, ECHO IT AND
;	JMP	START1		;  LOOP

START:	LXI	SP,STAK		; SET UP USER'S STACK
START1: CALL	CCRLF		; START A NEW LINE
	LXI	H,SINON		; WITH SIGN-ON MESSAGE
	CALL	COMSG
START2: CALL	CIMSG		; GET A LINE OF INPUT
	CALL	CCRLF
	LXI	H,INBUF+2	; POINT TO ITS TEXT
	CALL	COMSG		; ECHO THE WHOLE LINE
	CALL	CCRLF		; AND CR, LF
	JMP	START2		; THEN DO ANOTHER

;SINON:	DB	'SIGN-ON MESSAGE',CR,LF,0
SINON:	DB	"SIGN-ON MESSAGE",CR,LF,0

; CONSOLE CHARACTER INTO REGISTER A MASKED TO 7 BITS
CI:	PUSH	B		; SAVE REGISTERS
	PUSH	D
	PUSH	H
	MVI	C,RCONF		; READ FUNCTION
	CALL	BDOS
	ANI	7FH		; MASK TO 7 BITS
	POP	H		; RESTORE REGISTERS
	POP	D
	POP	B
	RET

; CHARACTER IN REGISTER A OUTPUT TO CONSOLE
CO:	PUSH	B		; SAVE REGISTERS
	PUSH	D
	PUSH	H
	MVI	C,WCONF		; SELECT FUNCTION
	MOV	E,A		; CHARACTER TO E
	CALL	BDOS		; OUTPUT BY CP/M
	POP	H		; RESTORE REGISTERS
	POP	D
	POP	B
	RET

; CARRIAGE RETURN, LINE FEED TO CONSOLE
CCRLF:	MVI	A,CR
	CALL	CO
	MVI	A,LF
	JMP	CO

; MESSAGE POINTED TO BY HL OUT TO CONSOLE
COMSG:	MOV	A,M		; GET A CHARACTER
	ORA	A		; ZERO IS THE TERMINATOR
	RZ			; ZERO IS THE TERMINATOR
	CALL	CO		; ELSE OUTPUT THE CHARACTER
	INX	H		; POINT TO THE NEXT ONE
	JMP	COMSG		; AND CONTINNUE

; INPUT CONSOLE MESSAGE INTO BUFFER
CIMSG:	PUSH	B		; SAVE REGISTERS
	PUSH	D
	PUSH	H
	LXI	H,INBUF+1	; ZERO CHARACTER COUNTER
	MVI	M,0
	DCX	H		; SET MAXIMUM LINE LENGTH
	MVI	M,80
	XCHG			; INBUF POINTER TO DE REGSITER
	MVI	C,RBUFF		; SET UP READ BUFFER FUNCTION
	CALL	BDOS		; INPUT A LINE
	LXI	H,INBUF+1	; GET CHARACTER COUNTER
	MOV	E,M		; INTO LSB OF DE REGISTER PAIR
	MVI	D,0		; ZERO MSB
	DAD	D		; ADD LENGTH TO START
	INX	H		; PLUS ONE POINTS TO END
	MVI	M,0		; INSERT TERMINATOR AT END
	POP	H		; RESTORE ALL REGISTERS
	POP	D
	POP	B
	RET

INBUF:	DS	83		; LINE INPUT BUFFER

; SET UP STACK SPACE
	DS	64		; 40H LOCATIONS
STAK:	DB	0		; TOP OF STACK

	END
